

import(
  tcltk,
  tcltk2, 
  ape, 
  pamr, 
  e1071, 
  class, 
  lattice,
  tsne
)

importFrom(grDevices, dev.off, gray, jpeg, pdf, png, rgb, svg, gray.colors, hsv)
importFrom(graphics, abline, arrows, axis, barplot, box, boxplot, 
             layout, legend, lines, mtext, par, plot, polygon, rect, 
             segments, text, title, points)
importFrom(stats, as.dendrogram, as.dist, biplot, chisq.test, cmdscale, 
             dendrapply, dist, hclust, is.leaf, prcomp, predict, sd, 
             wilcox.test)
importFrom(utils, head, read.table, read.csv, write.csv, write.table)
# importFrom(foreach, foreach, '%dopar%')


export(
  assign.plot.colors,
  change.encoding,
  check.encoding,
  classify,
  crossv,
  define.plot.area,
  delete.markup,
  delete.stop.words,
  dist.argamon,
  dist.cosine,
  dist.delta,
  dist.eder,
  dist.entropy,
  dist.minmax,
  dist.simple,
  dist.wurzburg,
  gui.classify,
  gui.oppose,
  gui.stylo,
  imposters,
  imposters.optimize,
  load.corpus.and.parse,
  load.corpus,
  make.frequency.list,
  make.ngrams,
  make.samples,
  make.table.of.frequencies,
  oppose,
  parse.corpus,
  parse.pos.tags,
  perform.culling,
  perform.delta,
  perform.knn,
  perform.naivebayes,
  perform.nsc,
  perform.svm,
  perform.impostors,
  performance.measures,
#  plot.sample.size,
  rolling.classify,
  rolling.delta,
  size.penalize,
  stylo.default.settings,
  stylo.network,
  stylo.pronouns,
  stylo,
  txt.to.features,
  txt.to.words.ext,
  txt.to.words,
  zeta.chisquare,
  zeta.craig,
  zeta.eder
)

S3method(print, stylo.results)
S3method(print, stylo.corpus)
S3method(print, stylo.data)
S3method(summary, stylo.results)
S3method(summary, stylo.corpus)
S3method(plot, sample.size)


